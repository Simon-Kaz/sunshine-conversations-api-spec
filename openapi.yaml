openapi: 3.0.2
info:
  version: "9.0.0"
  title: Sunshine Conversations API
  termsOfService: "https://www.zendesk.com/company/customers-partners/master-subscription-agreement/"
  description:
    $ref: "./info.md"
  x-logo:
    url: "sunco_logo.svg"
    altText: Sunshine Conversations
    href: https://smooch.io/
servers:
  - url: https://api.smooch.io
    description: United States server
  - url: https://api.eu-1.smooch.io
    description: European Union server
tags:
  - name: Apps
    x-displayName: Apps
    description: |
      If you’re looking to enable messaging inside your product for your customers, with as much control over the experience as you’d like, you can create and control Sunshine Conversations apps programmatically using [Account Provisioning](https://docs.smooch.io/guide/intro-to-account-provisioning/).
      ### Authentication
      Account Provisioning endpoints require `account` scope. See the [authorization](#authorization) and [authentication](#authentication) sections for information.
      A user account API key (key id that starts with `act_`) can access all account provisioning routes. You can create an account key by going to your account page.
      A service account API key (key id that starts with `svc_`) may be used to manage apps, but not service accounts or service account keys.

      | Key Type       | Authorized Methods                                                |
      | -------------- | ----------------------------------------------------------------- |
      | act            | All Core and Account Provisioning methods.                        |
      | svc   	     | All Core methods, App Management methods, and App Keys methods.     |

      ### Service Accounts
      Service Account schema and endpoints used for provisioning service accounts. A service account represents an API user, with its own set of credentials, that has only access to a certain subset of apps. For software makers that create apps on behalf of separate customers or businesses, service accounts can be used to generate and distribute credentials that only have access to a single business's data.
  - name: App Keys
    x-displayName: App Keys
    description: This set of endpoints is used to provision and revoke API keys for a Sunshine Conversations app. An app can have a maximum of 10 keys.
  - name: Attachments
    x-displayName: Attachments
    description: |
      You can upload files of any type that can then be used to send a file, image or carousel message to a user.

      ## Attachments for Messages
      The attachments API allows you to upload a file for the purpose of sending a message.
      Using the for parameter, you can signal to Sunshine Conversations that your upload will be used to send a message to a user.
      Knowing this, Sunshine Conversations will safely delete the attachment when the message, conversation or user is deleted.
  - name: Conversations
    x-displayName: Conversations
    description: A stored history of messages sent to and received from a `user`. This set of endpoints is used to provision and manage conversations.
  - name: Participants
    x-displayName: Participants
    description: Endpoints used for managing conversation [participants](https://docs.smooch.io/guide/multi-party-conversations#participant).
  - name: Messages
    x-displayName: Messages
    description: Endpoints used for managing [messages](https://docs.smooch.io/guide/key-concepts/#message).
  - name: Activities
    x-displayName: Activities
    description: Notify Sunshine Conversations of different conversation activities.
  - name: Switchboard Actions
    x-displayName: Switchboard Actions
    description: Manage which switchboard integration has control over a conversation.
  - name: Integrations
    x-displayName: Integrations
    description: |
      This set of endpoints is used to configure and manage various front-end messaging channels.
  - name: CustomIntegrationApiKeys
    x-displayName: Custom Integration API Keys
    description:
      This set of endpoints is used to provision and revoke API keys for a
      Sunshine Conversations integration. An integration can have a maximum of
      10 keys. This endpoint is only available for integrations of type custom.
      An error will be returned when attempting to provision API keys for any
      other integration type.
  - name: Switchboards
    x-displayName: Switchboards
    description: Switchboard operations
  - name: Switchboard Integrations
    x-displayName: Switchboard Integrations
    description: Switchboard Integrations operations
  - name: Users
    x-displayName: Users
    description: This set of endpoints is used to manage users.
  - name: Clients
    x-displayName: Clients
    description: Endpoints used for provisioning [clients](https://docs.smooch.io/guide/key-concepts/#client).
  - name: Changelog
    description: All notable changes to the API will be referenced in the [v2 API changelog](https://docs.smooch.io/guide/v2-api-changelog/).
  - name: Webhooks
    description: |
      Endpoints for managing webhooks associated to a Sunshine Conversations Connect integration or a custom integration. Webhooks are a fantastic way to extend the Sunshine Conversations platform beyond the built-in feature set. You can use webhooks to build your own Sunshine Conversations chat clients, to integrate more deeply with your favorite CRM, or to build a bot.
      A webhook can only operate within the scope of a single Sunshine Conversations app.
      <aside class="notice">An app is limited to 10 webhooks. A webhook can subscribe to multiple trigger events. We recommend using a single webhook that registers to all the events you need.</aside>

      ## Webhook Triggers
      When a webhook trigger is triggered, a POST request will be made to the URL configured in your webhook object along with a JSON payload specific for the event type.

      | Trigger                 | Description                       |
      | ----------------------  | -------------------------- |
      | conversation:create     | When a new conversation is created.    |
      | conversation:message  | When a new message was sent in the conversation. |
      | conversation:message:delivery:channel  | When a message is successfully delivered to a channel. |
      | conversation:message:delivery:failure  | When a new message fails to be delivered in the conversation. |
      | conversation:message:delivery:user  | When a new message is successfully delivered to a user. |
      | conversation:postback  | When a user clicks on a postback action button. |
      | conversation:read  | When a user has read the conversation. |
      | conversation:typing  | When a user starts or stops typing. |
      | switchboard:acceptControl | When a switchboard integration accepts control of a conversation. | 
      | switchboard:acceptControl:failure   | When control of a conversation fails to be accepted by a switchboard integration. |
      | switchboard:offerControl  | When a switchboard integration has been offered control of the conversation. |
      | switchboard:offerControl:failure | When control of a conversation can't be offered to another switchboard integration. |
      | switchboard:passControl | When a switchboard integration gives control of the conversation to another switchboard integration. |
      | switchboard:passControl:failure | When changing a switchboard integration to active fails. |
      | user:merge         | When two or more users are merged into one. |

x-tagGroups:
  - name: Account Provisioning
    tags:
      - Apps
      - App Keys
  - name: Attachments
    tags:
      - Attachments
  - name: Conversations
    tags:
      - Conversations
      - Participants
      - Messages
      - Activities
      - Switchboard Actions
  - name: Integrations
    tags:
      - Integrations
      - Webhooks
      - CustomIntegrationApiKeys
  - name: Switchboards
    tags:
      - Switchboards
      - Switchboard Integrations
  - name: Users
    tags:
      - Users
      - Clients
  - name: Changelog
    tags:
      - Changelog
paths:
  ##############################################################################
  # Apps
  ##############################################################################
  /v2/apps:
    $ref: "paths/v2@apps.yaml"
  /v2/apps/{appId}:
    $ref: "paths/v2@apps@{appId}.yaml"
  /v2/apps/{appId}/keys:
    $ref: "paths/v2@apps@{appId}@keys.yaml"
  /v2/apps/{appId}/keys/{keyId}:
    $ref: "paths/v2@apps@{appId}@keys@{keyId}.yaml"
  ##############################################################################
  # Attachments
  ##############################################################################
  /v2/apps/{appId}/attachments:
    $ref: "paths/v2@apps@{appId}@attachments.yaml"
  /v2/apps/{appId}/attachments/remove:
    $ref: "paths/v2@apps@{appId}@attachments@delete.yaml"
  /v2/apps/{appId}/attachments/token:
    $ref: "paths/v2@apps@{appId}@attachments@token.yaml"
  /v2/apps/{appId}/attachments/cookie:
    $ref: "paths/v2@apps@{appId}@attachments@cookie.yaml"
  ##############################################################################
  # Conversations
  ##############################################################################
  /v2/apps/{appId}/conversations:
    $ref: "paths/v2@apps@{appId}@conversations.yaml"
  /v2/apps/{appId}/conversations/{conversationId}:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/join:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@join.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/participants:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@participants.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/leave:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@leave.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/messages:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@messages.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/messages/{messageId}:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@messages@{messageId}.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/activity:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@activity.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/acceptControl:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@acceptControl.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/offerControl:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@offerControl.yaml"
  /v2/apps/{appId}/conversations/{conversationId}/passControl:
    $ref: "paths/v2@apps@{appId}@conversations@{conversationId}@passControl.yaml"
  ##############################################################################
  # Integrations
  ##############################################################################
  /v2/apps/{appId}/integrations:
    $ref: "paths/v2@apps@{appId}@integrations.yaml"
  /v2/apps/{appId}/integrations/{integrationId}:
    $ref: "paths/v2@apps@{appId}@integrations@{integrationId}.yaml"
  /v2/apps/{appId}/integrations/{integrationId}/keys:
    $ref: "paths/v2@apps@{appId}@integrations@{integrationId}@keys.yaml"
  /v2/apps/{appId}/integrations/{integrationId}/keys/{keyId}:
    $ref: "paths/v2@apps@{appId}@integrations@{integrationId}@keys@{keyId}.yaml"
  /v2/apps/{appId}/integrations/{integrationId}/webhooks:
    $ref: "paths/v2@apps@{appId}@integrations@{integrationId}@webhooks.yaml"
  /v2/apps/{appId}/integrations/{integrationId}/webhooks/{webhookId}:
    $ref: "paths/v2@apps@{appId}@integrations@{integrationId}@webhooks@{webhookId}.yaml"
  ##############################################################################
  # Switchboards
  ##############################################################################
  /v2/apps/{appId}/switchboards:
    $ref: "paths/v2@apps@{appId}@switchboards.yaml"
  /v2/apps/{appId}/switchboards/{switchboardId}:
    $ref: "paths/v2@apps@{appId}@switchboards@{switchboardId}.yaml"
  /v2/apps/{appId}/switchboards/{switchboardId}/switchboardIntegrations:
    $ref: "paths/v2@apps@{appId}@switchboards@{switchboardId}@switchboardIntegrations.yaml"
  ? /v2/apps/{appId}/switchboards/{switchboardId}/switchboardIntegrations/{switchboardIntegrationId}
  : $ref: "paths/v2@apps@{appId}@switchboards@{switchboardId}@switchboardIntegrations@{switchboardIntegrationId}.yaml"
  ##############################################################################
  # Users
  ##############################################################################
  /v2/apps/{appId}/users:
    $ref: "paths/v2@apps@{appId}@users.yaml"
  /v2/apps/{appId}/users/{userIdOrExternalId}:
    $ref: "paths/v2@apps@{appId}@users@{userId}.yaml"
  /v2/apps/{appId}/users/{userIdOrExternalId}/clients:
    $ref: "paths/v2@apps@{appId}@users@{userId}@clients.yaml"
  /v2/apps/{appId}/users/{userIdOrExternalId}/clients/{clientId}:
    $ref: "paths/v2@apps@{appId}@users@{userId}@clients@{clientId}.yaml"
  /v2/apps/{appId}/users/{userIdOrExternalId}/personalinformation:
    $ref: "paths/v2@apps@{appId}@users@{userId}@personalinformation.yaml"
x-webhooks:
  "Webhook Event":
    $ref: "components/schemas/webhooks/webhookEvent.yaml"
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - basicAuth: [app, account]
  - bearerAuth: [app, account]
